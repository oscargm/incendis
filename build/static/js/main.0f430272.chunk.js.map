{"version":3,"sources":["common/utils/generic-service.ts","common/components/loader.component.tsx","common/components/selector.component.tsx","pods/fires/model.ts","pods/fires/fires-table.component.tsx","pods/fires/fires.component.tsx","pods/fires/fires.service.ts","pods/fires/mappers.ts","App.tsx","index.tsx"],"names":["genericService","url","successCallback","failCallback","fetch","then","response","json","error","Loader","props","text","Selector","data","selectedValue","selectionTopic","label","onChangeEvent","htmlFor","name","value","onChange","sort","map","item","COLUMNS","fire_date","api_field","vm_field","sortable","region_name","municipality_name","forest_hectares_burnt","pasture_hectares_burnt","urban_hectares_burnt","total_green_hectares_burnt","Table","styled","table","Arrow","i","ArrowUp","ArrowDown","FiresTable","React","rowSelected","setRowSelected","fires","columns","onHeaderClick","orderedBy","orderAsc","console","log","column","onClick","fire","fireIndex","className","Object","keys","key","keyIndex","format","Fires","setFires","yearSelected","setYearSelected","availableYears","setAvailableYears","orderBy","setOrderBy","setOrderAsc","getFires","rows","Date","data_incendi","comarca","termemunic","parseInt","haarbrades","hanoarbrad","hanoforest","haforestal","years","apiYear","year","length","event","target","values","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0f430272.chunk.js","sourcesContent":["export const genericService = (\n  url: string,\n  successCallback: (data: any) => void,\n  failCallback: (error: Error) => void\n) => {\n  try {\n    fetch(url).then((response) => response.json().then(successCallback));\n  } catch (error) {\n    failCallback(error);\n  }\n};\n","import * as React from 'react';\n\ninterface LoaderProps {\n  text: string;\n}\n\nexport const Loader = (props: LoaderProps) => <span>{props.text}</span>;\n","import * as React from 'react';\n\ninterface SelectorProps {\n  data: string[];\n  selectedValue: string;\n  selectionTopic: string;\n  label: string;\n  onChangeEvent: React.ChangeEventHandler<HTMLSelectElement>;\n}\n\nexport const Selector = (props: SelectorProps) => {\n  const { data, selectedValue, selectionTopic, label, onChangeEvent } = props;\n  return (\n    <div>\n      <label htmlFor={selectionTopic}>{label}</label>\n      <select\n        name={selectionTopic}\n        // defaultValue={yearSelected}\n        value={selectedValue}\n        onChange={onChangeEvent}\n      >\n        {data.sort().map((item) => (\n          <option key={`${selectionTopic}-${item}`} value={item}>\n            {item}\n          </option>\n        ))}\n      </select>\n    </div>\n  );\n};\n","export interface APIFires {\n  data_incendi: string;\n  comarca: string;\n  termemunic: string;\n  haarbrades: string;\n  hanoarbrad: string;\n  hanoforest: string;\n  haforestal: string;\n}\n\nexport interface VMFires {\n  fire_date: Date;\n  region_name: string;\n  municipality_name: string;\n  forest_hectares_burnt: number;\n  pasture_hectares_burnt: number;\n  urban_hectares_burnt: number;\n  total_green_hectares_burnt: number;\n}\n\nexport interface Filter {\n  text: string;\n  api_field: keyof APIFires;\n  vm_field: keyof VMFires;\n}\n\nexport interface Column extends Filter {\n  sortable: boolean;\n}\n\nexport const COLUMNS: { [key: string]: Column } = {\n  fire_date: {\n    text: 'Data',\n    api_field: 'data_incendi',\n    vm_field: 'fire_date',\n    sortable: true,\n  },\n  region_name: {\n    text: 'Comarca',\n    api_field: 'comarca',\n    vm_field: 'region_name',\n    sortable: true,\n  },\n  municipality_name: {\n    text: 'Municipi',\n    api_field: 'termemunic',\n    vm_field: 'municipality_name',\n    sortable: true,\n  },\n  forest_hectares_burnt: {\n    text: 'Ha bosc cremat',\n    api_field: 'haarbrades',\n    vm_field: 'forest_hectares_burnt',\n    sortable: true,\n  },\n  pasture_hectares_burnt: {\n    text: 'Ha pastures cremades',\n    api_field: 'hanoarbrad',\n    vm_field: 'pasture_hectares_burnt',\n    sortable: true,\n  },\n  urban_hectares_burnt: {\n    text: 'Ha urbanes cremades',\n    api_field: 'hanoforest',\n    vm_field: 'urban_hectares_burnt',\n    sortable: true,\n  },\n  total_green_hectares_burnt: {\n    text: 'Ha verdes cremades',\n    api_field: 'haforestal',\n    vm_field: 'total_green_hectares_burnt',\n    sortable: true,\n  },\n};\n\nexport interface APIYears {\n  year: string;\n}\n","import * as React from 'react';\nimport { format } from 'date-fns';\nimport { Column, VMFires } from './model';\nimport styled from '@emotion/styled';\n\nconst Table = styled.table`\n  border-collapse: collapse;\n  margin: 25px 0;\n  font-size: 0.9em;\n  font-family: sans-serif;\n  min-width: 400px;\n  box-shadow: 0 0 20px rgba(0, 0, 0, 0.15);\n  &thead tr {\n    background-color: #009879;\n    color: #ffffff;\n    text-align: left;\n  }\n  & th {\n    cursor: pointer;\n    position: relative;\n  }\n  & th,\n  td {\n    padding: 12px 15px;\n  }\n  & tr {\n    border-bottom: 1px solid #ddd;\n  }\n  & tr:nth-of-type(even) {\n    background-color: #fbfbfb;\n  }\n  & tr:last-of-type {\n    border-bottom: 2px solid #009879;\n  }\n  & tr.active-row {\n    font-weight: bold;\n    color: #009879;\n  }\n`;\n\nconst Arrow = styled.i`\n  border: solid black;\n  border-width: 0 3px 3px 0;\n  position: absolute;\n  top: 40%;\n  right: 0;\n  padding: 3px;\n  /* margin-left: 10px; */\n`;\n\nconst ArrowUp = styled(Arrow)`\n  transform: rotate(-135deg);\n  -webkit-transform: rotate(-135deg);\n`;\n\nconst ArrowDown = styled(Arrow)`\n  transform: rotate(45deg);\n  -webkit-transform: rotate(45deg);\n`;\n\ninterface FiresTableProps {\n  columns: Column[];\n  fires: VMFires[];\n  onHeaderClick: (column: Column) => void;\n  orderedBy: Column | undefined;\n  orderAsc: boolean;\n}\n\nexport const FiresTable = (props: FiresTableProps) => {\n  const [rowSelected, setRowSelected] = React.useState(0);\n  const { fires, columns, onHeaderClick, orderedBy, orderAsc } = props;\n  React.useEffect(() => {\n    console.log(orderedBy);\n  }, [orderedBy]);\n  return (\n    <Table>\n      <thead>\n        <tr>\n          {columns.map((column) => (\n            <th\n              key={column.vm_field}\n              onClick={() => column.sortable && onHeaderClick(column)}\n            >\n              {column.text}\n              {orderedBy &&\n                orderedBy.vm_field === column.vm_field &&\n                (orderAsc ? <ArrowUp /> : <ArrowDown />)}\n            </th>\n          ))}\n        </tr>\n      </thead>\n      <tbody>\n        {fires.map((fire, fireIndex) => (\n          <tr\n            key={`fire-${fireIndex}`}\n            className={fireIndex === rowSelected ? 'active-row' : ''}\n            onClick={() => setRowSelected(fireIndex)}\n          >\n            {Object.keys(fires[0]).map((key, keyIndex) =>\n              keyIndex === 0 ? (\n                <td key={`fire-${fireIndex}-${key}`}>\n                  {format(fire[key], 'dd-MMM-yyyy')}\n                </td>\n              ) : (\n                <td key={`fire-${fireIndex}-${key}`}>{fire[key]}</td>\n              )\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  );\n};\n","import * as React from 'react';\nimport { getFires, getFiresAvailableData } from './fires.service';\nimport { mapAvailableDataYears, mapFiresFromApiToVm } from './mappers';\nimport { APIFires, APIYears, Column, COLUMNS, VMFires } from './model';\nimport { FiresTable } from './fires-table.component';\nimport { Loader, Selector } from '../../common';\n\nexport const Fires = () => {\n  const [fires, setFires] = React.useState<VMFires[]>([]);\n  const [yearSelected, setYearSelected] = React.useState<string>('');\n  const [availableYears, setAvailableYears] = React.useState<string[]>([]);\n  const [orderBy, setOrderBy] = React.useState<Column>();\n  const [orderAsc, setOrderAsc] = React.useState<boolean>(true);\n\n  React.useEffect(() => {\n    yearSelected !== '' &&\n      getFires(\n        yearSelected,\n        orderBy?.api_field,\n        orderAsc,\n        (rows: APIFires[]) => {\n          console.log(rows);\n          setFires(mapFiresFromApiToVm(rows));\n        },\n        (error) => console.log(error)\n      );\n  }, [orderAsc, orderBy, yearSelected]);\n\n  React.useEffect(() => {\n    getFiresAvailableData(\n      (years: APIYears[]) => {\n        setAvailableYears(mapAvailableDataYears(years));\n      },\n      (error) => console.log(error)\n    );\n  }, []);\n\n  const headerClicked = (column: Column) => {\n    if (orderBy?.api_field !== column.api_field) {\n      setOrderBy(column);\n      setOrderAsc(true);\n    } else {\n      setOrderAsc(!orderAsc);\n    }\n    console.log('headerClicked', column);\n  };\n\n  return (\n    <>\n      <div>\n        {availableYears.length > 0 ? (\n          <Selector\n            data={availableYears}\n            selectedValue={yearSelected}\n            selectionTopic={'year'}\n            label={'Sel·lecciona un any: '}\n            onChangeEvent={(event) => setYearSelected(event.target.value)}\n          />\n        ) : (\n          <Loader text={'loading ...'} />\n        )}\n      </div>\n      <div>\n        {fires.length > 0 ? (\n          <FiresTable\n            columns={Object.values(COLUMNS)}\n            fires={fires}\n            onHeaderClick={headerClicked}\n            orderedBy={orderBy}\n            orderAsc={orderAsc}\n          />\n        ) : (\n          <Loader text={'Please, select a date.'} />\n        )}\n      </div>\n    </>\n  );\n};\n","import { genericService } from '../../common';\n\nexport const getFires = (\n  yearSelected: string = '',\n  orderBy: string = '',\n  orderAsc: boolean,\n  successCallback: (rows) => void,\n  failCallback: (error) => void\n) => {\n  // ORDER BY haforestal DESC\n  genericService(\n    `https://analisi.transparenciacatalunya.cat/resource/bks7-dkfd.json?${\n      yearSelected !== ''\n        ? `$query=SELECT data_incendi, comarca, termemunic, haarbrades, hanoarbrad, hanoforest, haforestal WHERE date_extract_y(data_incendi)==${yearSelected} ${\n            orderBy !== ''\n              ? `ORDER BY ${orderBy} ${orderAsc ? 'ASC' : 'DESC'}`\n              : ''\n          }`\n        : ''\n    }`,\n    successCallback,\n    failCallback\n  );\n};\n\nexport const getFiresAvailableData = (\n  successCallback: (rows) => void,\n  failCallback: (error) => void\n) => {\n  genericService(\n    'https://analisi.transparenciacatalunya.cat/resource/bks7-dkfd.json?$select=date_extract_y(data_incendi)%20as%20year&$group=year',\n    successCallback,\n    failCallback\n  );\n};\n","import { APIFires, APIYears, VMFires } from './model';\n\nexport const mapFiresFromApiToVm = (apiFires: APIFires[]): VMFires[] =>\n  apiFires.map((fire) => ({\n    fire_date: new Date(fire.data_incendi),\n    region_name: fire.comarca,\n    municipality_name: fire.termemunic,\n    forest_hectares_burnt: parseInt(fire.haarbrades),\n    pasture_hectares_burnt: parseInt(fire.hanoarbrad),\n    urban_hectares_burnt: parseInt(fire.hanoforest),\n    total_green_hectares_burnt: parseInt(fire.haforestal),\n  }));\n\nexport const mapAvailableDataYears = (apiYears: APIYears[]): string[] =>\n  apiYears.map((apiYear) => apiYear.year);\n","import React from 'react';\nimport './App.css';\nimport { Fires } from './pods/fires/fires.component';\n\nfunction App() {\n  return <Fires />;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}